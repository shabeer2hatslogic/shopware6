(this["webpackJsonpPluginswag-pay-pal"]=this["webpackJsonpPluginswag-pay-pal"]||[]).push([[12],{"E/hA":function(e,n,a){"use strict";a.r(n);a("XTG7");function r(e){return function(e){if(Array.isArray(e))return t(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,n){if(!e)return;if("string"==typeof e)return t(e,n);var a=Object.prototype.toString.call(e).slice(8,-1);"Object"===a&&e.constructor&&(a=e.constructor.name);if("Map"===a||"Set"===a)return Array.from(e);if("Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a))return t(e,n)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function t(e,n){(null==n||n>e.length)&&(n=e.length);for(var a=0,r=new Array(n);a<n;a++)r[a]=e[a];return r}n.default=Shopware.Component.wrapComponentConfig({template:'{% block swag_paypal_cross_border %}\n<sw-card\n    :title="$tc(\'swag-paypal.cross-border.cardTitle\')"\n    :disabled="isLoading"\n    class="swag-paypal-cross-border"\n    position-identifier="swag-paypal-cross-border-card"\n>\n\n    {% block swag_paypal_cross_border_warning_text %}\n    <sw-alert class="swag-paypal-cross-border__warning-text" variant="warning">\n        {{ $t(\'swag-paypal.cross-border.warningText\') }}\n    </sw-alert>\n    {% endblock %}\n\n    {% block swag_paypal_cross_border_info_text %}\n    <span class="swag-paypal-cross-border__info-text">\n        {{ $tc(\'swag-paypal.cross-border.infoText\') }}\n    </span>\n    {% endblock %}\n\n    {% block swag_paypal_cross_border_messaging_enabled %}\n    <sw-inherit-wrapper\n        {% if VUE3 %}\n            v-model:value="actualConfigData[\'SwagPayPal.settings.crossBorderMessagingEnabled\']"\n        {% else %}\n            v-model="actualConfigData[\'SwagPayPal.settings.crossBorderMessagingEnabled\']"\n        {% endif %}\n        :inherited-value="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.crossBorderMessagingEnabled\']"\n    >\n        <template #content="props">\n            <sw-switch-field\n                name="SwagPayPal.settings.crossBorderMessagingEnabled"\n                :map-inheritance="props"\n                :label="$tc(\'swag-paypal.cross-border.crossBorderMessagingEnable\')"\n                :disabled="isLoading || props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                :value="props.currentValue"\n                bordered\n                {% if VUE3 %}\n                    @update:value="props.updateCurrentValue"\n                {% else %}\n                    @change="props.updateCurrentValue"\n                {% endif %}\n            />\n        </template>\n    </sw-inherit-wrapper>\n    {% endblock %}\n\n    {% block swag_paypal_cross_border_buyer_country_override %}\n    <sw-inherit-wrapper\n        {% if VUE3 %}\n            v-model:value="actualConfigData[\'SwagPayPal.settings.crossBorderBuyerCountry\']"\n        {% else %}\n            v-model="actualConfigData[\'SwagPayPal.settings.crossBorderBuyerCountry\']"\n        {% endif %}\n        :inherited-value="selectedSalesChannelId == null ? null : allConfigs[\'null\'][\'SwagPayPal.settings.crossBorderBuyerCountry\']"\n    >\n        <template #content="props">\n            <sw-single-select\n                name="SwagPayPal.settings.crossBorderBuyerCountry"\n                :map-inheritance="props"\n                :label="$tc(\'swag-paypal.cross-border.crossBorderBuyerCountryOverride\')"\n                :disabled="isLoading || props.isInherited || !acl.can(\'swag_paypal.editor\')"\n                :value="props.currentValue ?? null"\n                :options="countryOverrideOptions"\n                {% if VUE3 %}\n                    @update:value="props.updateCurrentValue"\n                {% else %}\n                    @change="props.updateCurrentValue"\n                {% endif %}\n            />\n        </template>\n    </sw-inherit-wrapper>\n    {% endblock %}\n</sw-card>\n{% endblock %}\n',inject:["acl"],props:{isLoading:{type:Boolean,required:!1,default:!1},actualConfigData:{type:Object,required:!0,default:function(){return{}}},allConfigs:{type:Object,required:!0},selectedSalesChannelId:{type:String,required:!1,default:null}},computed:{countryOverrideOptions:function(){var e=[{label:this.$tc("locale.en-AU"),value:"en-AU"},{label:this.$tc("locale.de-DE"),value:"de-DE"},{label:this.$tc("locale.es-ES"),value:"es-ES"},{label:this.$tc("locale.fr-FR"),value:"fr-FR"},{label:this.$tc("locale.en-GB"),value:"en-GB"},{label:this.$tc("locale.it-IT"),value:"it-IT"},{label:this.$tc("locale.en-US"),value:"en-US"}].sort((function(e,n){return e.label.localeCompare(n.label)}));return[{value:null,label:this.$tc("swag-paypal.cross-border.crossBorderBuyerCountryAuto")}].concat(r(e))}}})},Wl2V:function(e,n,a){},XTG7:function(e,n,a){var r=a("Wl2V");r.__esModule&&(r=r.default),"string"==typeof r&&(r=[[e.i,r,""]]),r.locals&&(e.exports=r.locals);(0,a("P8hj").default)("4f081add",r,!0,{})}}]);